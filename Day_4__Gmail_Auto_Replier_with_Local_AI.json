{
  "name": "Day 4: Gmail Auto-Replier with Local AI",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        240,
        -20
      ],
      "id": "4e3e4a20-3194-43bd-b0a4-98bff9553f56",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 5,
        "filters": {
          "includeSpamTrash": false,
          "labelIds": [
            "UNREAD"
          ]
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        400,
        -20
      ],
      "id": "87a15eb6-3110-4279-a330-31dc7217b699",
      "name": "Get Unread Emails",
      "webhookId": "b54767b9-66ee-4245-83fa-0b1ac64c35fd",
      "credentials": {
        "gmailOAuth2": {
          "id": "dt6mAFjQsNnC3jbk",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Get paired Gmail data\nconst allGmailItems = $items(\"Get Unread Emails\");\nconst gmailData = allGmailItems[$itemIndex].json;\n\n// Parse AI response\nconst aiResponse = $input.item.json;\nlet analysis = {};\n\ntry {\n  const responseText = aiResponse.choices[0].message.content;\n  const cleanedText = responseText.replace(/```json\\n?/g, '').replace(/```\\n?/g, '').trim();\n  analysis = JSON.parse(cleanedText);\n} catch (error) {\n  analysis = { email_type: \"error\", should_reply: false, draft_reply: \"\" };\n}\n\n// Extract email metadata - it's at root level, not in headers!\nanalysis.email_subject = gmailData.Subject || 'No Subject';\nanalysis.email_from_full = gmailData.From || '';\n\n// Extract email address from \"Name <email@example.com>\" format\nconst fromString = gmailData.From || '';\nconst emailMatch = fromString.match(/<(.+)>/) || fromString.match(/([^\\s]+@[^\\s]+)/);\nanalysis.email_from = emailMatch ? emailMatch[1] : (fromString || 'noreply@example.com');\n\n// Add other metadata\nanalysis.thread_id = gmailData.threadId;\nanalysis.snippet = gmailData.snippet;\nanalysis.email_id = gmailData.id;\n\nreturn analysis;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        860,
        -200
      ],
      "id": "cfa427fc-940f-4113-9bcd-72219faad2fe",
      "name": "Process AI Response"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "32cab39f-f192-4017-a0a6-8816ccf12ec6",
              "leftValue": "={{ $json.should_reply }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1280,
        -20
      ],
      "id": "5dc95cc4-6537-4bbc-bd52-e442a0c1d15a",
      "name": "Should Auto-Reply?"
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "=Re: {{ $json.email_subject }}",
        "message": "={{ $json.draft_reply }}",
        "options": {
          "threadId": "={{ $json.thread_id }}",
          "sendTo": "={{ $json.email_from }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1500,
        -140
      ],
      "id": "2e7f83e3-0350-4c59-8fa1-e96a8e8eba1b",
      "name": "Create a draft",
      "webhookId": "11598703-0cb1-40d2-bcc6-429564cbb3c5",
      "credentials": {
        "gmailOAuth2": {
          "id": "dt6mAFjQsNnC3jbk",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "=1kgBVBu4NA1v8cEPpgTs1eipRAcg7s-g5iWQXNcr0iFA",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kgBVBu4NA1v8cEPpgTs1eipRAcg7s-g5iWQXNcr0iFA/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{ new Date().toISOString() }}",
            "Email From": "={{ $node[\"Process AI Response\"].json.email_from }}",
            "Email Subject": "={{ $node[\"Process AI Response\"].json.email_subject }}",
            "Email Type": "={{ $node[\"Process AI Response\"].json.email_type }}",
            "Should Reply": "={{ $node[\"Process AI Response\"].json.should_reply }}",
            "Reply Created": "={{ $node[\"Process AI Response\"].json.should_reply ? 'Yes' : 'No' }}",
            "Draft Reply Preview": "={{ ($node[\"Process AI Response\"].json.draft_reply || \"\").substring(0, 100) }}...",
            "Thread ID": "={{ $node[\"Process AI Response\"].json.thread_id }}",
            "Status": "Processed"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email From",
              "displayName": "Email From",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email Subject",
              "displayName": "Email Subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email Type",
              "displayName": "Email Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Should Reply",
              "displayName": "Should Reply",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Reply Created",
              "displayName": "Reply Created",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Draft Reply Preview",
              "displayName": "Draft Reply Preview",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Thread ID",
              "displayName": "Thread ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1500,
        100
      ],
      "id": "07ecdbbc-17c2-42b1-ab70-dbbfd1052bb0",
      "name": "Log Email Actions",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "DCGrCjADin2huwok",
          "name": "Google Sheets account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6da19eb8-1f27-4fef-9208-414f699678ab",
              "name": "total_emails",
              "value": "={{ $items().length }}",
              "type": "string"
            },
            {
              "id": "c5a3eca4-2c39-4ff5-886b-954f608e5511",
              "name": "replies_created",
              "value": "={{ $items().filter(item => item.json.should_reply === true).length }}",
              "type": "string"
            },
            {
              "id": "7d4aad13-48e9-411d-bb4d-951aa194d5f5",
              "name": "emails_skipped",
              "value": "={{ $items().filter(item => item.json.should_reply === false).length }}",
              "type": "string"
            },
            {
              "id": "28894156-73d4-4643-9a48-68fcd034be44",
              "name": "status",
              "value": "Completed successfully",
              "type": "string"
            },
            {
              "id": "391f9614-7042-4e17-828c-a8b06005d325",
              "name": "timestamp",
              "value": "={{ new Date().toISOString() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1700,
        -20
      ],
      "id": "f6c66abb-149d-4c9f-aa95-cd75511408b9",
      "name": "Workflow Summary"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.deepseek.com/v1/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"deepseek-chat\",\n  \"temperature\": 0.7,\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are an email assistant. Analyze emails and determine if they need replies.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": {{ JSON.stringify(\"Analyze this email and determine: 1) What type? 2) Should auto-reply? 3) If yes, generate reply.\\n\\nEmail: \" + $json.snippet + \"\\n\\nRespond in JSON: {\\\"email_type\\\": \\\"\\\", \\\"should_reply\\\": true/false, \\\"draft_reply\\\": \\\"\\\"}\") }}\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        620,
        -200
      ],
      "id": "1119de90-ccb9-4890-9900-8ee454e0081d",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "vSAJXOzWrX84Exvs",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1080,
        -20
      ],
      "id": "bf7fc6c5-cb39-480c-886b-1d359c542117",
      "name": "Merge"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get Unread Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Unread Emails": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Process AI Response": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Auto-Reply?": {
      "main": [
        [
          {
            "node": "Create a draft",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Email Actions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Email Actions": {
      "main": [
        [
          {
            "node": "Workflow Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Process AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Should Auto-Reply?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a04de1e3-b512-4e12-b239-6860a767294d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6298067642c3e349581f2e29092e2f6c83f0a76b4135fb1998c90c198e1c5829"
  },
  "id": "HsJxRHAIaKhhsMY1",
  "tags": []
}